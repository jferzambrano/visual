# -*- coding: utf-8 -*-
"""Analisis_Multivariado_Taller1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TSjrfQ6BOxlAYFyZ4S4P-6VlONHq6JxJ

# Solución taller Analisis descriptivo multivariado

**Universidad Central**

*Jenny Fernanda Zambrano Josa*

#Taller
1. Volver la variable FAMI cuartos hogar numerica.
2. Volverla ordinal
3. Eliminar la categoria Una y la columna Estrato 1 y fusionar Seis, Siete, Ocho, Nueve y Diez o más
4. Calcular el coeficiente de correlación de Spearman entre Numero de cuartos por hogar y nivel del sisben (las personas que no tienen sisben se eliminan)
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

"""##1. Tablas de contingencia"""

url="https://raw.githubusercontent.com/Cruzalirio/Ucentral/master/Bases/ICFES/PruebaSaber1.csv"
datos1=pd.read_csv(url, sep=";", encoding="latin1")
datos1.shape

#Volver la variable FAMI_CUARTOSHOGAR factor: mostrar primero uno, luego dos...
datos1.shape
tabla=pd.crosstab(datos1.FAMI_CUARTOSHOGAR, datos1.FAMI_NIVEL_SISBEN)
tabla

#Ver datos de FAMI_CUARTOSHOGAR
datos1['FAMI_CUARTOSHOGAR'].unique()

#Renombrar los valores de FAMI_CUARTOSHOGAR, eliminando la categoria Una y fusionar Seis, Siete, Ocho, Nueve y Diez o más
datos1["FAMI_CUARTOSHOGAR"].replace({"Tres": "3", "Uno": "1", "Cuatro": "4", "Dos": "2","Cinco": "5", "Seis": "Otros", "Diez o m\xa0s": "Otros", "Siete": "Otros", "Nueve": "Otros", "Ocho": "Otros", "Una": "1"}, inplace=True)
print(datos1)

#Ver las nuevas categorias de FAMI_CUARTOSHOGAR
datos1['FAMI_CUARTOSHOGAR'].unique()

#Volver la variable FAMI cuartos hogar categorica.
datos1["FAMI_CUARTOSHOGAR"] = datos1["FAMI_CUARTOSHOGAR"].astype("category")
datos1.dtypes[20:40]

#Validar que se muestre en orden
datos1.shape
tabla2=pd.crosstab(datos1.FAMI_CUARTOSHOGAR, datos1.FAMI_NIVEL_SISBEN)
tabla2

#Se elimina la columna Estrato 1 
tabla2.drop(['Estrato 1'], axis=1)

"""##Correlación de Spearman"""

#Se eliminan los NAN de la columna FAMI_CUARTOSHOGAR
datos1.dropna(subset = ['FAMI_CUARTOSHOGAR'], inplace=True)
#Se eliminan 'Otros' de la columna FAMI_CUARTOSHOGAR
datos1 = datos1.drop(datos1[datos1['FAMI_CUARTOSHOGAR']=='Otros'].index)

#Convertir la columna FAMI_CUARTOSHOGAR a Entero
datos1['FAMI_CUARTOSHOGAR'] = datos1['FAMI_CUARTOSHOGAR'].astype('int')

#Se eliminan los NAN de la columna 'FAMI_NIVEL_SISBEN'
datos1.dropna(subset = ['FAMI_NIVEL_SISBEN'], inplace=True)
#Se eliminan los No est\xa0 clasificada por el SISBEN de la columna 'FAMI_NIVEL_SISBEN'
datos1 = datos1.drop(datos1[datos1['FAMI_NIVEL_SISBEN']=='No est\xa0 clasificada por el SISBEN'].index)
#Se eliminan los Esta clasificada en otro nivel del SISBEN de la columna 'FAMI_NIVEL_SISBEN'
datos1 = datos1.drop(datos1[datos1['FAMI_NIVEL_SISBEN']=='Esta clasificada en otro nivel del SISBEN'].index)
#Se eliminan los Estrato 1 de la columna 'FAMI_NIVEL_SISBEN'
datos1 = datos1.drop(datos1[datos1['FAMI_NIVEL_SISBEN']=='Estrato 1'].index)

#Se valida los datos de la columna FAMI_NIVEL_SISBEN
datos1['FAMI_NIVEL_SISBEN'].unique()

#Se identifica el tipo de datos
datos1.dtypes[20:40]

#Se crea la nueva tabla
datos1.shape
tabla3=pd.crosstab(datos1.FAMI_CUARTOSHOGAR, datos1.FAMI_NIVEL_SISBEN)
tabla3

#Se calcula el coeficiente de correlación de Spearman 
print('Correlación spearman: ', datos1['FAMI_CUARTOSHOGAR'].corr(datos1['FAMI_NIVEL_SISBEN'], method='spearman'))

sns.heatmap(tabla3)